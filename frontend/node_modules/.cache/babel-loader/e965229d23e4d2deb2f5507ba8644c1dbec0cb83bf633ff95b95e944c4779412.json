{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Popa Pill\\\\Downloads\\\\react-jobly (fixed)\\\\frontend\\\\src\\\\JobList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport JoblyApi from '../api';\nimport JobCard from './JobCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = ({\n  currentUser\n}) => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [appliedJobs, setAppliedJobs] = useState([]);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      const jobs = await JoblyApi.getJobs();\n      setJobs(jobs);\n    };\n    fetchJobs();\n  }, []);\n  useEffect(() => {\n    const fetchAppliedJobs = async () => {\n      if (currentUser) {\n        const userProfile = await JoblyApi.getUserProfile(currentUser.username);\n        setAppliedJobs(userProfile.applications || []);\n      }\n    };\n    fetchAppliedJobs();\n  }, [currentUser]);\n  const applyForJob = async jobId => {\n    await JoblyApi.applyToJob(jobId);\n    setAppliedJobs(prev => [...prev, jobId]); // Update the applied jobs state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        job: job,\n        appliedJobs: appliedJobs,\n        applyForJob: applyForJob\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(JobList, \"pc3pgTlM64HaVsL9cjiVKD9mQzk=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useState","useEffect","JoblyApi","JobCard","jsxDEV","_jsxDEV","JobList","currentUser","_s","jobs","setJobs","appliedJobs","setAppliedJobs","fetchJobs","getJobs","fetchAppliedJobs","userProfile","getUserProfile","username","applications","applyForJob","jobId","applyToJob","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","id","_c","$RefreshReg$"],"sources":["C:/Users/Popa Pill/Downloads/react-jobly (fixed)/frontend/src/JobList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport JoblyApi from '../api';\r\nimport JobCard from './JobCard';\r\n\r\nconst JobList = ({ currentUser }) => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [appliedJobs, setAppliedJobs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      const jobs = await JoblyApi.getJobs();\r\n      setJobs(jobs);\r\n    };\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchAppliedJobs = async () => {\r\n      if (currentUser) {\r\n        const userProfile = await JoblyApi.getUserProfile(currentUser.username);\r\n        setAppliedJobs(userProfile.applications || []);\r\n      }\r\n    };\r\n    fetchAppliedJobs();\r\n  }, [currentUser]);\r\n\r\n  const applyForJob = async (jobId) => {\r\n    await JoblyApi.applyToJob(jobId);\r\n    setAppliedJobs((prev) => [...prev, jobId]); // Update the applied jobs state\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>List of Jobs</h1>\r\n      <div>\r\n        {jobs.map(job => (\r\n          <JobCard \r\n            key={job.id} \r\n            job={job} \r\n            appliedJobs={appliedJobs} \r\n            applyForJob={applyForJob} \r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobList; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,QAAQ;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMJ,IAAI,GAAG,MAAMP,QAAQ,CAACY,OAAO,CAAC,CAAC;MACrCJ,OAAO,CAACD,IAAI,CAAC;IACf,CAAC;IACDI,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd,MAAMc,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAIR,WAAW,EAAE;QACf,MAAMS,WAAW,GAAG,MAAMd,QAAQ,CAACe,cAAc,CAACV,WAAW,CAACW,QAAQ,CAAC;QACvEN,cAAc,CAACI,WAAW,CAACG,YAAY,IAAI,EAAE,CAAC;MAChD;IACF,CAAC;IACDJ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACR,WAAW,CAAC,CAAC;EAEjB,MAAMa,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnC,MAAMnB,QAAQ,CAACoB,UAAU,CAACD,KAAK,CAAC;IAChCT,cAAc,CAAEW,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,KAAK,CAAC,CAAC,CAAC,CAAC;EAC9C,CAAC;EAED,oBACEhB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBvB,OAAA;MAAAmB,QAAA,EACGf,IAAI,CAACoB,GAAG,CAACC,GAAG,iBACXzB,OAAA,CAACF,OAAO;QAEN2B,GAAG,EAAEA,GAAI;QACTnB,WAAW,EAAEA,WAAY;QACzBS,WAAW,EAAEA;MAAY,GAHpBU,GAAG,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CA1CIF,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}