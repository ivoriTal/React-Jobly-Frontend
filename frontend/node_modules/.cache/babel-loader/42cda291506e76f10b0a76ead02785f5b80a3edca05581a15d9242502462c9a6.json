{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Popa Pill\\\\Downloads\\\\react-jobly (fixed)\\\\frontend\\\\src\\\\CompanyList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport JoblyApi from '../api';\nimport CompanyCard from './CompanyCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyList = () => {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      const companies = await JoblyApi.getCompanies();\n      setCompanies(companies);\n    };\n    fetchCompanies();\n  }, []);\n  const handleSearch = async e => {\n    const term = e.target.value;\n    setSearchTerm(term);\n    const filteredCompanies = await JoblyApi.searchCompanies(term);\n    setCompanies(filteredCompanies);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Companies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search companies...\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: companies.map(company => /*#__PURE__*/_jsxDEV(CompanyCard, {\n        company: company\n      }, company.handle, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyList, \"+gEIDOzN3zyTw1xxoGWCcxMqevA=\");\n_c = CompanyList;\nexport default CompanyList;\nvar _c;\n$RefreshReg$(_c, \"CompanyList\");","map":{"version":3,"names":["React","useState","useEffect","JoblyApi","CompanyCard","jsxDEV","_jsxDEV","CompanyList","_s","companies","setCompanies","searchTerm","setSearchTerm","fetchCompanies","getCompanies","handleSearch","e","term","target","value","filteredCompanies","searchCompanies","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","company","handle","_c","$RefreshReg$"],"sources":["C:/Users/Popa Pill/Downloads/react-jobly (fixed)/frontend/src/CompanyList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport JoblyApi from '../api';\r\nimport CompanyCard from './CompanyCard';\r\n\r\nconst CompanyList = () => {\r\n  const [companies, setCompanies] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchCompanies = async () => {\r\n      const companies = await JoblyApi.getCompanies();\r\n      setCompanies(companies);\r\n    };\r\n    fetchCompanies();\r\n  }, []);\r\n\r\n  const handleSearch = async (e) => {\r\n    const term = e.target.value;\r\n    setSearchTerm(term);\r\n    const filteredCompanies = await JoblyApi.searchCompanies(term);\r\n    setCompanies(filteredCompanies);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>List of Companies</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search companies...\"\r\n        value={searchTerm}\r\n        onChange={handleSearch}\r\n      />\r\n      <div>\r\n        {companies.map(company => (\r\n          <CompanyCard key={company.handle} company={company} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyList; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,QAAQ;AAC7B,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMJ,SAAS,GAAG,MAAMN,QAAQ,CAACW,YAAY,CAAC,CAAC;MAC/CJ,YAAY,CAACD,SAAS,CAAC;IACzB,CAAC;IACDI,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChC,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC3BP,aAAa,CAACK,IAAI,CAAC;IACnB,MAAMG,iBAAiB,GAAG,MAAMjB,QAAQ,CAACkB,eAAe,CAACJ,IAAI,CAAC;IAC9DP,YAAY,CAACU,iBAAiB,CAAC;EACjC,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,qBAAqB;MACjCT,KAAK,EAAER,UAAW;MAClBkB,QAAQ,EAAEd;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFpB,OAAA;MAAAgB,QAAA,EACGb,SAAS,CAACqB,GAAG,CAACC,OAAO,iBACpBzB,OAAA,CAACF,WAAW;QAAsB2B,OAAO,EAAEA;MAAQ,GAAjCA,OAAO,CAACC,MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CACtD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnCID,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAqCjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}